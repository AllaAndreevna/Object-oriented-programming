#ifndef ROBOT_H // директива препроцессора C++, 
                // которая используется для защиты от 
                // повторного включения заголовочного 
                // файла (robot.h) в программу.
#define ROBOT_H

// объявляю класс
class RobotForPoliv {
private:
    int id_;
    double capacity_; // Объем ёмкости
    double waterInCapacity_; // Количество воды в ёмкости

public:
    // Конструктор по умолчанию
    RobotForPoliv();

    // Конструктор инициализации
    RobotForPoliv(int id, double capacity);

    // Конструктор копирования
    RobotForPoliv(const RobotForPoliv& other);

    // Метод набора воды
    void takeWater(double water);

    // Метод полива
    void poliv(double water);

    // Методы доступа
    int getId() const;
    double getCapacity() const;
    double getWaterInCapacity() const;
};

#endif  


// 	Магистры с факультета робототехники ухаживают за бинарным деревом: 
//  регулярно его поливают и время от времени обрезают боковые ветви. 
//  Перед своим выпуском магистры решили разработать робота, занимающийся 
//  поливом и стрижкой дерева. Дереву нужно не меньше литра и не больше двух 
//  литров воды в сутки, и при этом обрезать не меньше четырёх и не больше 
//  восьми ветвей в неделю. В помощь магистрам, напишите программу для работы 
//  с журналом ухода за деревом, в котором студенты будут оставлять записи о том, 
//  кто и когда поливал или подстригал дерево.
// 	Робот для полива: идентификатор, объем ёмкости, 
//  количество воды в ёмкости, метод набора воды, метод полива.

